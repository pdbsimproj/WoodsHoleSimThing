rseed <- 27957321
st.yr <- 1940
end.yr <- 2040
nyears <- end.yr - st.yr + 1
dev.start <- 1970
years <- seq(st.yr, end.yr)
sigR <- 0.4
niter=1
set.seed(rseed)
Rdevs <- rep(NA, nyears)
fname<- paste0("/Rdevs_", iter, ".txt")
Rdevs <-  c(rep(1,(dev.start-st.yr) ), rlnorm(n=(end.yr-dev.start+1), meanlog=0, sdlog=0.4))
write.table("mu", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=F)
write.table(c("nrofcoeff",0), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
write.table("data", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
table.out <- cbind(years, Rdevs, "(*      #mu     1 )")
write.table((table.out), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
write.table("mu", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=F)
write.table(c("nrofcoeff",0), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
write.table("data", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
table.out <- cbind(years, Rdevs, "(*   #mu   1 )")
write.table((table.out), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
write.table("mu", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=F)
write.table(c("nrofcoeff",0), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
write.table("data", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
table.out <- cbind(years, rep(1, nyears), "(*   #mu   ", Rdevs, " )")
write.table((table.out), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
write.table("mu", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=F)
write.table(c("nrofcoeff",0), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
write.table("data", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
table.out <- cbind(years, rep(1, nyears), "(*   #mu   ", round(Rdevs,5), " )")
write.table((table.out), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
wkdir <- "C:\\liz\\R\\ICES_WGMG\\complexity"
rseed <- 27957321
st.yr <- 1940
end.yr <- 2040
nyears <- end.yr - st.yr + 1
years <- seq(st.yr, end.yr)
dev.start <- 1970
sigR <- 0.4
niter=1
#---------------------------------------------------------------------
set.seed(rseed)
Rdevs <- rep(NA, nyears)
for (iter in 1:niter) {
fname<- paste0("/Rdevs_", iter, ".txt")
Rdevs <-  c(rep(1,(dev.start-st.yr) ), rlnorm(n=(end.yr-dev.start+1), meanlog=0, sdlog=0.4))
write.table("mu", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=F)
write.table(c("nrofcoeff",0), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
write.table("data", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
table.out <- cbind(years, rep(1, nyears), "(*   #mu   ", round(Rdevs,5), " )")
write.table((table.out), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
}
niter=2
#---------------------------------------------------------------------
set.seed(rseed)
Rdevs <- rep(NA, nyears)
for (iter in 1:niter) {
fname<- paste0("/Rdevs_", iter, ".txt")
Rdevs <-  c(rep(1,(dev.start-st.yr) ), rlnorm(n=(end.yr-dev.start+1), meanlog=0, sdlog=0.4))
write.table("mu", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=F)
write.table(c("nrofcoeff",0), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
write.table("data", file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
table.out <- cbind(years, rep(1, nyears), "(*   #mu   ", round(Rdevs,5), " )")
write.table((table.out), file=paste0(wkdir, fname), col.names=F, row.names=F, quote=F, append=T)
}
wkdir <- "c:/liz/NFT/ASAP/pollock"
niter=1
i=1
asap.std <- as.matrix(read.table(paste0(wkdir, "/asap3.std"), header = F, skip=1,sep = "")) # Read in std file from admb
ssb.rows <- which(asap.std[,2]=="SSB")
recr.rows <- which(asap.std[,2]=="recruits")
steep.row <- which(asap.std[,2]=="SR_steepness")
R0.row <- which(asap.std[,2]=="log_SR_scaler")
ncol.cor <- dim(asap.std) [1]
asap.cor <- read.table(paste0(wkdir, "/asap3.cor",sep=""), header = F, skip=2,sep = "",  col.names=c("index", "name", "value", "stdev", seq(1,ncol.cor)), fill=T)
asap.cor.mat <- as.matrix(asap.cor[,5:length(asap.cor[1,])])
asap.cor.names <- as.character(as.vector(asap.cor[,2]) )
levels.cor.names <- unique(asap.cor.names)
asap <- dget(paste0(wkdir, "/asap3.Rdat"))
years <- seq(asap$parms$styr, asap$parms$endyr)
flat <- cbind(years, i, SSB=as.numeric(asap.std[ssb.rows, 3]), recr=as.numeric(asap.std[recr.rows, 3]), asap.std[ssb.rows, 4], asap.std[recr.rows, 4])
sr.param <- matrix(NA, nrow=2, ncol=2)
sr.param[1, ] <- as.numeric(asap.std[steep.row, c(3,4)])
ln.par <- as.numeric(asap.std[R0.row, c(3,4)])
sr.param[2,1] <- exp(ln.par[1]+(ln.par[2]^2)/2)
sr.param[2,2] <- exp(2*ln.par[1]+ln.par[2]^2)*(exp(ln.par[2]^2)-1)
asap.list <- list(predSR=flat, sr.param=sr.param )
asap.list
flat <- cbind(years, "iter"=i, SSB=as.numeric(asap.std[ssb.rows, 3]), recr=as.numeric(asap.std[recr.rows, 3]), sigma.SSB=asap.std[ssb.rows, 4], sigma.R=asap.std[recr.rows, 4])
sr.param <- matrix(NA, nrow=2, ncol=2)
sr.param[1, ] <- as.numeric(asap.std[steep.row, c(3,4)])
ln.par <- as.numeric(asap.std[R0.row, c(3,4)])
sr.param[2,1] <- exp(ln.par[1]+(ln.par[2]^2)/2)
sr.param[2,2] <- exp(2*ln.par[1]+ln.par[2]^2)*(exp(ln.par[2]^2)-1)
asap.list <- list(predSR=flat, sr.param=sr.param )
asap.list
sr.param <- matrix(NA, nrow=2, ncol=2)
row.names(sr.params) <- c("steepness", "R0")
col.names(sr.params) <- c("mean", "sd")
sr.param[1, ] <- as.numeric(asap.std[steep.row, c(3,4)])
sr.param <- matrix(NA, nrow=2, ncol=2)
row.names(sr.params) <- c("steepness", "R0")
rownames(sr.params) <- c("steepness", "R0")
sr.param <- matrix(NA, nrow=2, ncol=2)
rownames(sr.params) <- c("steepness", "R0")
sr.param <- matrix(NA, nrow=2, ncol=2)
row.names(sr.param) <- c("steepness", "R0")
col.names(sr.param) <- c("mean", "sd")
sr.param
colnames(sr.param) <- c("mean", "sd")
sr.param
asap <- dget(paste0(wkdir, "/asap3.Rdat"))
years <- seq(asap$parms$styr, asap$parms$endyr)
flat <- cbind(years, "iter"=i, SSB=as.numeric(asap.std[ssb.rows, 3]), recr=as.numeric(asap.std[recr.rows, 3]), sigma.SSB=asap.std[ssb.rows, 4], sigma.R=asap.std[recr.rows, 4])
sr.param <- matrix(NA, nrow=2, ncol=2)
row.names(sr.param) <- c("steepness", "R0")
colnames(sr.param) <- c("mean", "sd")
sr.param[1, ] <- as.numeric(asap.std[steep.row, c(3,4)])
ln.par <- as.numeric(asap.std[R0.row, c(3,4)])
sr.param[2,1] <- exp(ln.par[1]+(ln.par[2]^2)/2)
sr.param[2,2] <- exp(2*ln.par[1]+ln.par[2]^2)*(exp(ln.par[2]^2)-1)
asap.list <- list(predSR=flat, sr.param=sr.param )
asap.list
asap.cor.mat
asap
names(asap)
asap$info
asap$options
asap$parms
names(asap)
asap$SR.parms
library(TMB)
sessionInfo()
runExample(all = TRUE)
rm(list=ls(all.names=F))      # Remove all variables, etc. from the session memory
graphics.off()          # close any open graphics windows
model.set.wd <- c("C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m1/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m2/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m3/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m4/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m5/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m6/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m7/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m8/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m9/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m10/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m11/",
"C:/liz/R/Ensemble_Forecasts/1_manuscript_runs/Case1/asap_m12/")
model.set.wd[1]
nchar(model.set.wd[1])
n.files <- length(model.set.wd)
n.files
file.names <- rep(NA, n.files)
file.names <- paste0("M", seq(1, n.files))
file.names
file.names <- paste0("M", seq(1, n.files), "_ASAP.dat")
file.names
? set.seed
i.wd=1
tmp.dat <-readLines(paste0(model.set.wd[i.wd], file.names[i.wd]))
tmp.dat
? match
tmp.catch.line <- which(match(tmp.dat, "# Fleet-1 Catch Data"))
tmp.catch.line <- which(match(tmp.dat, "# Fleet-1 Catch Data"==1))
match(tmp.dat, "# Fleet-1 Catch Data")
tmp.catch.line <- which(match(tmp.dat, "# Fleet-1 Catch Data")==1)
tmp.catch.line <- which(match(tmp.dat, "# Fleet-1 Catch Data")==1)
tmp.catch.line
tmp.dat <-readLines(paste0(model.set.wd[i.wd], file.names[i.wd]))
tmp.catch.line <- which(match(tmp.dat, "# Fleet-1 Catch Data")==1)
tmp.disc.line <- which(match(tmp.dat, "# Discards")==1)
tmp.caa <- as.matrix(tmp.dat[(tmp.catch.line+1):(tmp.disc.line-1)])
tmp.caa
tmp.caa[, 1:5]
tmp.caa <- as.matrix(as.numeric(tmp.dat[(tmp.catch.line+1):(tmp.disc.line-1)]))
tmp.caa
tmp.dat[(tmp.catch.line+1):(tmp.disc.line-1)]
as.numeric(tmp.dat[(tmp.catch.line+1):(tmp.disc.line-1)])
? read.table
tmp.catch.line
tmp.disc.line
tmp.disc.line-tmp.catch.line
tmp.caa <- as.matrix(read.table(paste0(model.set.wd[i.wd], file.names[i.wd]), skip=tmp.catch.line, nrows=(tmp.disc.line-tmp.catch.line-1)))
tmp.caa
asap.catch.scalar
asap.catch.scalar <- c(rep(1,25), runif(n=21, min=0.4, max=0.7)) #scalar multiplied by catch_obs
asap.catch.scalar
#this scales catch at age (one vector of length nages per year, so you can apply to different age classes)
sel.scalar <- rep(1,10)
tmp.caa1 <- as.matrix(read.table(paste0(model.set.wd[i.wd], file.names[i.wd]), skip=tmp.catch.line, nrows=(tmp.disc.line-tmp.catch.line-1)))
sel.scalar%*%asap.catch.scalar
asap.catch.scalar%*%sel.scalar
length(asap.catch.scalar)
asap.catch.scalar*sel.scalar
t(asap.catch.scalar)%*%sel.scalar
t(asap.catch.scalar)
t(asap.catch.scalar)*sel.scalar
asap.catch.scalar %*% t(sel.scalar)
tmp.ncol <- length(tmp.caa[1,])
tmp.ncol
tmp.caa2 <- tmp.caa1[,1:(tmp.ncol-1)]
tmp.caa2
tmp.caa1
tmp.caa2 <- tmp.caa1[,1:(tmp.ncol-1)] * caa.scalar
caa.scalar <- asap.catch.scalar %*% t(sel.scalar)
tmp.caa2 <- tmp.caa1[,1:(tmp.ncol-1)] * caa.scalar
tmp.caa2
apply(tmp.caa2, 1, sum)
tmp.caa3 <- cbind(tmp.caa2, apply(tmp.caa2, 1, sum))
tmp.nlines <- length(tmp.dat)
? write.table
tmp.dat[tmp.disc.line1:tmp.nlines]
tmp.dat[tmp.disc.line:tmp.nlines]
tmp.dat[1:tmp.catch.line]
asap.catch.scalar
asap<-dget("C:\\liz\\NFT\\ASAP\\herring_from_jjd\\2012BASEUPDATEDTO13NOAGE.RDAT")
names(asap)
asap$SR.annual.parms
m1.cv <- dget("C:\\liz\\R\\Ensemble_Forecasts\\1_manuscript_runs\\Case_lowError\\asap_m1\\CV\\M1_ASAP_CV.RDAT")
m2.cv <- dget("C:\\liz\\R\\Ensemble_Forecasts\\1_manuscript_runs\\Case_lowError\\asap_m2\\CV\\M2_ASAP_CV.RDAT")
names(m1.cv)
m1.cv$index.comp.mats
names(m1.cv$index.comp.mats)
m2.cv.ipred <- m2.cv$index.comp.mats$ind01.pr
m1.cv.ipred <- m1.cv$index.comp.mats$ind01.pr
m2.cv.ipred <- m2.cv$index.comp.mats$ind01.pr
m1.cv.ipred
dim(m1.cv.ipred)
m1.cv.ipred[44:46,]
m1.cv.ipred[44:46,]
names(m1.cv)
m1.cv$index.nobs
? as.character()
? as.string
as.string()
? strsplit
m1 <- dget("C:\\liz\\R\\Ensemble_Forecasts\\1_manuscript_runs\\Case_lowError\\asap_m1\\CV\\M1_ASAP.RDAT")
m1.cv <- dget("C:\\liz\\R\\Ensemble_Forecasts\\1_manuscript_runs\\Case_lowError\\asap_m1\\CV\\M1_ASAP_CV.RDAT")
names(m1)
m1$parms
m1$index.obs
tmp.obs <- m1$index.obs
dim(tmp.obs)
length(tmp.obs)
tmp.obs[[1]]
tmp.obs <- m1$index.obs[[ind]]
ind=1
tmp.obs <- m1$index.obs[[ind]]
#compare total index
tmp.obs <- m1$index.obs[[ind]]
tmp.pred <-m1$index.pred[[ind]]
tmp.pred.cv <- m1.cv$index.pred[[ind]]
cbind(tmp.obs, tmp.pred, tmp.pred.cv)
length(tmp.pred.cv)
nYears <- m1$parms$nyears
calc.pred.cv <- matrix(NA, nYears, nInd )
names(m1)
m1$q.indices
tmp.q <- m1.cv$q.indices[ind]
m1.cv$index.sel
tmp.sel <- m1.cv$index.sel[ind,]
tmp.pred.cv1 <- m1.cv$index.pred[[ind]]
tmp.q <- m1.cv$q.indices[ind]
tmp.sel <- m1.cv$index.sel[ind,]
names(m1)
m1$options
m1$parms
m1$control.parms
tmp.sel <- m1.cv$index.sel[ind,]
tmp.time <- m1.cv$control.parms$index.month[ind]
tmp.ages <- c(m1.cv$control.parms$index.sel.start.age[ind], m1.cv$control.parms$index.sel.end.age[ind])
names(m1)
m1$fleet.FAA
m1$Fref
names(m1)
iyr=1
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-M.age[iyr,]-m1.cv$F.age[iyr,])*tmp.time)
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$M.age[iyr,]-m1.cv$F.age[iyr,])*tmp.time)
tmp.Nage
tmp.sel
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.age.cv
tmp.pred.cv <- sum(tmp.pred.age.cv)
tmp.pred.cv
tmp.pred.cv1[1]
iyr
tmp.q
tmp.time
m1.cv$control.parms$index.month
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$M.age[iyr,]-m1.cv$F.age[iyr,])*tmp.time/12)
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.cv <- sum(tmp.pred.age.cv)
tmp.pred.cv
m1.cv$N.age[iyr,]
iyr
tmp.pred.cv1[1]
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$M.age[iyr,]-m1.cv$F.age[iyr,])*tmp.time/12)
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.cv <- sum(tmp.pred.age.cv)
tmp.pred.cv
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$M.age[iyr,]-m1.cv$F.age[iyr,])*tmp.time/13)
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.cv <- sum(tmp.pred.age.cv)
tmp.pred.cv
ind
#compare total index
tmp.obs <- m1$index.obs[[ind]]
tmp.pred <-m1$index.pred[[ind]]
tmp.pred.cv1 <- m1.cv$index.pred[[ind]]
cbind(tmp.pred, tmp.red.cv1)
cbind(tmp.pred, tmp.pred.cv1)
m1.cv$F.age[iyr,]
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$F.age[iyr,])
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.cv <- sum(tmp.pred.age.cv)
}
}
cross_val_survey <- function(model.list,
model.set.wd,
retro.yr) {
n.models <- length(model.list)
for (im in 1:n.models)
setwd(model.set.wd[im])
tmp.model.list <- model.list [[im]]
tmp.model <- tmp.model.list [[3]]
asap.in <- read.table(paste0(tmp.model[retro.yr], ".DAT") )
}#end cross_val_survey function
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$F.age[iyr,]))
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.cv <- sum(tmp.pred.age.cv)
tmp.pred.cv
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$F.age[iyr,])*tmp.time/12)
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.cv <- sum(tmp.pred.age.cv)
tmp.pred.cv
tmp.pred.cv1
m1.cv$index.pred[[2]]
tmp.sel
m1.cv$F.age
m1.cv$fleet.Fmult
m1.cv$F.age[iyr,]
names(m1)
names(m1$index.comp.mats)
m1.cv$index.comp.mats$ind01.pr[1,]
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$M.age[iyr,]-m1.cv$F.age[iyr,])*tmp.time/12)
tmp.Nage
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$M.age[iyr,]-m1.cv$F.age[iyr,])*tmp.time/12)
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.age.cv
getoptions(digits)
getOptions(digits)
options()
m1.cv$N.age[1,]
options(digits=11)
nInd <- m1$parms$nindices
nYears <- m1$parms$nyears
calc.pred.cv <- matrix(NA, nYears, nInd )
#compare total index
tmp.obs <- m1$index.obs[[ind]]
tmp.pred <-m1$index.pred[[ind]]
tmp.pred.cv1 <- m1.cv$index.pred[[ind]]
tmp.q <- m1.cv$q.indices[ind]
tmp.sel <- m1.cv$index.sel[ind,]
tmp.time <- m1.cv$control.parms$index.month[ind]
tmp.ages <- c(m1.cv$control.parms$index.sel.start.age[ind], m1.cv$control.parms$index.sel.end.age[ind])
iyr
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$M.age[iyr,]-m1.cv$F.age[iyr,])*tmp.time/12)
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.cv <- sum(tmp.pred.age.cv)
tmp.pred.cv
tmp.time=0
tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$M.age[iyr,]-m1.cv$F.age[iyr,])*tmp.time/12)
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.cv <- sum(tmp.pred.age.cv)
tmp.pred.cv
tmp.pred.cv[1]
tmp.pred.age.cv
nAges <- m1$parms$nages
calc.pred.cv <- matrix(NA, nYears, nInd )
calc.pred.age.cv <- array(NA, dim=c(nYears, nAges, nInd))
m1 <- dget("C:\\liz\\R\\Ensemble_Forecasts\\1_manuscript_runs\\Case_lowError\\asap_m1\\CV\\M1_ASAP.RDAT")
m1.cv <- dget("C:\\liz\\R\\Ensemble_Forecasts\\1_manuscript_runs\\Case_lowError\\asap_m1\\CV\\M1_ASAP_CV.RDAT")
nInd <- m1$parms$nindices
nYears <- m1$parms$nyears
nAges <- m1$parms$nages
calc.pred.cv <- matrix(NA, nYears, nInd )
calc.pred.age.cv <- array(NA, dim=c(nYears, nAges, nInd))
for (ind in 1:nInd){
#compare total index
tmp.obs <- m1$index.obs[[ind]]
tmp.pred <-m1$index.pred[[ind]]
tmp.pred.cv1 <- m1.cv$index.pred[[ind]]
tmp.q <- m1.cv$q.indices[ind]
tmp.sel <- m1.cv$index.sel[ind,]
tmp.time <- m1.cv$control.parms$index.month[ind]
tmp.ages <- c(m1.cv$control.parms$index.sel.start.age[ind], m1.cv$control.parms$index.sel.end.age[ind])
for (iyr in 1:nYears){
tmp.Nage <- m1.cv$N.age[iyr,(tmp.ages[1]:tmp.ages[2])]*exp((-m1.cv$M.age[iyr,(tmp.ages[1]:tmp.ages[2])]-m1.cv$F.age[iyr,(tmp.ages[1]:tmp.ages[2])])*(tmp.time-1)/12)
# tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$F.age[iyr,]))
# tmp.Nage <- m1.cv$N.age[iyr,]*exp((-m1.cv$F.age[iyr,])*tmp.time/12)
tmp.pred.age.cv <- tmp.q*tmp.Nage*tmp.sel
tmp.pred.cv <- sum(tmp.pred.age.cv)
calc.pred.age.cv[iyr,(tmp.ages[1]:tmp.ages[2]), ind] <- tmp.pred.age.cv/tmp.pred.cv
calc.pred.cv[iyr, ind]  <- tmp.pred.cv
} #end iyr loop
} #end ind loop
#look at plots of fits of pred.cv
plot(seq(1,nYears), m1.cv$index.obs[1], type='p', pch=19, col='black')
plot(seq(1,nYears), m1$index.obs[1], type='p', pch=19, col='black')
plot(seq(1,nYears), m1$index.obs[1,], type='p', pch=19, col='black')
m1$index.obs
plot(seq(1,nYears), m1$index.obs[[1], type='p', pch=19, col='black')
plot(seq(1,nYears), m1$index.obs[[1]], type='p', pch=19, col='black')
points(seq(1,nYears), calc.pred.cv[,1], pch=1, col='blue')
points(seq(1,nYears), m1$index.pred[[1]], pch=2, col='green')
m1$M.age
m2.cv <- dget("C:\\liz\\R\\Ensemble_Forecasts\\1_manuscript_runs\\Case_lowError\\asap_m2\\CV\\M2_ASAP_CV.RDAT")
m2.cv$M.age
m1.calc.pred.cv <- matrix(NA, nYears, nInd )
m1.calc.pred.age.cv <- array(NA, dim=c(nYears, nAges, nInd))
m2.calc.pred.cv <- matrix(NA, nYears, nInd )
m2.calc.pred.age.cv <- array(NA, dim=c(nYears, nAges, nInd))
m2
m2.cv
nYears
nYears-2
points(seq(1,(nYears-3)), m2.cv$index.pred[[1]], col='red', pch=3)
names(m1.cv)
m1.cv$like.additional
m1.cv$like
m1.cv$like.additional
m1.cv$index.cv
m1$options
m1$control.parms
tmp.pred.cv1
#calculate likelihoods
nObs <- length(tmp.pred.cv1)
nObs
m1.cv$index.cv
m1.cv$index.cv[[1]]
tmp.cv <- m1.cv$index.cv[[ind]]
tmp.cv
tmp.cv[iobs]^2
iobs=1
tmp.cv[iobs]^2
#calculate likelihoods
nObs <- length(tmp.pred.cv1)
tmp.i.lk.tot <- 0
tmp.cv <- m1.cv$index.cv[[ind]]
for (iobs in 1:nObs){
tmp.sigma <- sqrt(ln(tmp.cv[iobs]^2)+1)
#total index
tmp.i.lk.tot<- tmp.i.lk.tot+ tmp.sigma + 0.5*(log(tmp.obs[iobs])-log(tmp.pred.cv1[iobs])^2)/(tmp.sigma)^2
#index age comp
} #end iobs loop
#calculate likelihoods
nObs <- length(tmp.pred.cv1)
tmp.i.lk.tot <- 0
tmp.cv <- m1.cv$index.cv[[ind]]
for (iobs in 1:nObs){
tmp.sigma <- sqrt(log(tmp.cv[iobs]^2)+1)
#total index
tmp.i.lk.tot<- tmp.i.lk.tot+ tmp.sigma + 0.5*(log(tmp.obs[iobs])-log(tmp.pred.cv1[iobs])^2)/(tmp.sigma)^2
#index age comp
} #end iobs loop
warnings()
tmp.cv
log(tmp.cv[1])
tmp.sigma <- sqrt(log(tmp.cv[iobs]^2+1))
#calculate likelihoods
nObs <- length(tmp.pred.cv1)
tmp.i.lk.tot <- 0
tmp.cv <- m1.cv$index.cv[[ind]]
for (iobs in 1:nObs){
tmp.sigma <- sqrt(log(tmp.cv[iobs]^2+1))
#total index
tmp.i.lk.tot<- tmp.i.lk.tot+ tmp.sigma + 0.5*(log(tmp.obs[iobs])-log(tmp.pred.cv1[iobs])^2)/(tmp.sigma)^2
#index age comp
} #end iobs loop
tmp.i.lk.tot
#calculate likelihoods
nObs <- length(tmp.pred.cv1)
tmp.i.lk.tot <- 0
tmp.cv <- m1.cv$index.cv[[ind]]
for (iobs in 1:nObs){
tmp.sigma <- sqrt(log(tmp.cv[iobs]^2+1))
#total index
tmp.i.lk.tot<- tmp.i.lk.tot+ tmp.sigma + 0.5*(log(tmp.obs[iobs])-log(tmp.pred.cv1[iobs])^2)/(tmp.sigma)^2
#index age comp
} #end iobs loop
tmp.i.lk.tot
iobs
iobs=1
tmp.i.lk.tot <- 0
tmp.cv <- m1.cv$index.cv[[ind]]
tmp.sigma <- sqrt(log(tmp.cv[iobs]^2+1))
#total index
tmp.i.lk.tot<- tmp.i.lk.tot+ tmp.sigma + 0.5*(log(tmp.obs[iobs])-log(tmp.pred.cv1[iobs])^2)/(tmp.sigma)^2
tmp.obs
tmp.i.lk.tot <- 0
#total index
tmp.i.lk.tot<- tmp.i.lk.tot+ tmp.sigma + 0.5*(log(tmp.obs[iobs])-log(tmp.pred.cv1[iobs])^2)/((tmp.sigma)^2)
library(shiny); source('C:/liz/Shiny/liz/lizApp.R')
setwd("C:/liz/Shiny/liz")
source('lizApp.R')
runApp()
runApp()
setwd("C:/liz/Github/SimThing/WoodsHoleSimThing/inst/shiny-examples/SetUp")
runApp()
? sliderInput
